{"version":3,"file":"60ba243a40f8a55674d264664bf4e5ac1d1a1b10-0394edb501ce22bbe602.js","mappings":"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","sources":["webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/GlobalConfig.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/utils.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","class Queue {\n    constructor() {\n        this.order = [];\n        this.scheduled = new Set();\n    }\n    add(process) {\n        if (!this.scheduled.has(process)) {\n            this.scheduled.add(process);\n            this.order.push(process);\n            return true;\n        }\n    }\n    remove(process) {\n        const index = this.order.indexOf(process);\n        if (index !== -1) {\n            this.order.splice(index, 1);\n            this.scheduled.delete(process);\n        }\n    }\n    clear() {\n        this.order.length = 0;\n        this.scheduled.clear();\n    }\n}\nfunction createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Queue();\n    let nextFrame = new Queue();\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (queue.add(callback) && addToCurrentFrame && isProcessing) {\n                // If we're adding it to the currently running queue, update its measured size\n                numToRun = thisFrame.order.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.remove(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Clear the next frame queue\n            nextFrame.clear();\n            // Execute this frame\n            numToRun = thisFrame.order.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = thisFrame.order[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = () => {\n        const timestamp = performance.now();\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const wantsHandoff = useRef(Boolean(props[optimizedAppearDataAttribute] && !window.HandoffComplete));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.render();\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        visualElement.updateFeatures();\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            wantsHandoff.current = false;\n            // This ensures all future calls to animateChanges() will run in useEffect\n            window.HandoffComplete = true;\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            frame.read(() => {\n                try {\n                    renderState.dimensions =\n                        typeof instance.getBBox ===\n                            \"function\"\n                            ? instance.getBBox()\n                            : instance.getBoundingClientRect();\n                }\n                catch (e) {\n                    // Most likely trying to measure an unrendered element under Firefox\n                    renderState.dimensions = {\n                        x: 0,\n                        y: 0,\n                        width: 0,\n                        height: 0,\n                    };\n                }\n            });\n            frame.render(() => {\n                buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n                renderSVG(instance, renderState);\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.pointerType === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            if (this.isPressing)\n                return;\n            this.removeEndListeners();\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel, globalTapTarget } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !globalTapTarget &&\n                        !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(props.globalTapTarget ? window : this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        if (process.env.NODE_ENV !== \"production\") {\n            invariant(keyframes$1.length === 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { frame, cancelFrame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Cancelling an animation will write to the DOM. For safety we want to defer\n     * this until the next `update` frame lifecycle. This flag tracks whether we\n     * have a pending cancel, if so we shouldn't allow animations to finish.\n     */\n    let pendingCancel = false;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => {\n        pendingCancel = false;\n        animation.cancel();\n    };\n    const safeCancel = () => {\n        pendingCancel = true;\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        if (pendingCancel)\n            return;\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        attachTimeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n            return noop;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => {\n            if (pendingCancel)\n                return;\n            animation.finish();\n        },\n        cancel: safeCancel,\n    };\n    return controls;\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","const MotionGlobalConfig = {\n    skipAnimations: false,\n};\n\nexport { MotionGlobalConfig };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\nimport { MotionGlobalConfig } from '../../utils/GlobalConfig.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false ||\n            MotionGlobalConfig.skipAnimations) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (\n        /**\n         * If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        !transition.isHandoff &&\n            value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            /**\n             * If we're outputting values to onUpdate then we can't use WAAPI as there's\n             * no way to read the value from WAAPI every frame.\n             */\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { getValueTransition } from '../utils/transitions.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction hasKeyframesChanged(value, target) {\n    const current = value.get();\n    if (Array.isArray(target)) {\n        for (let i = 0; i < target.length; i++) {\n            if (target[i] !== current)\n                return true;\n        }\n    }\n    else {\n        return current !== target;\n    }\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            elapsed: 0,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                const elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n                if (elapsed !== null) {\n                    valueTransition.elapsed = elapsed;\n                    valueTransition.isHandoff = true;\n                }\n            }\n        }\n        let canSkip = !valueTransition.isHandoff &&\n            !hasKeyframesChanged(value, valueTarget);\n        if (valueTransition.type === \"spring\" &&\n            (value.getVelocity() || valueTransition.velocity)) {\n            canSkip = false;\n        }\n        /**\n         * Temporarily disable skipping animations if there's an animation in\n         * progress. Better would be to track the current target of a value\n         * and compare that against valueTarget.\n         */\n        if (value.animation) {\n            canSkip = false;\n        }\n        if (canSkip)\n            continue;\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             */\n            if (shouldAnimateType && (!isInherited || handledRemovedValues)) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/framer/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction boxEqualsRounded(a, b) {\n    return (Math.round(a.x.min) === Math.round(b.x.min) &&\n        Math.round(a.x.max) === Math.round(b.x.max) &&\n        Math.round(a.y.min) === Math.round(b.y.min) &&\n        Math.round(a.y.max) === Math.round(b.y.max));\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEqualsRounded, isDeltaZero, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isNumericalString } from '../../../utils/is-numerical-string.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if ((this.type === \"html\" || this.type === \"svg\") &&\n            !this.projection &&\n            ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.18.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.18.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.18.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","Queue","constructor","this","order","scheduled","Set","add","process","has","push","remove","index","indexOf","splice","delete","clear","length","stepsOrder","schedule","cancel","cancelFrame","state","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","key","thisFrame","nextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","queue","i","createRenderStep","processStep","stepId","processBatch","performance","now","Math","max","min","forEach","createRenderBatcher","requestAnimationFrame","noop","MotionContext","LazyContext","strict","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","wantsHandoff","window","HandoffComplete","render","animationState","animateChanges","useEffect","updateFeatures","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","getValueAsType","type","transform","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","elementProps","children","renderedChildren","createElement","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","read","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","node","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","globalTapTarget","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","pipe","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","calculatedDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","pendingCancel","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","attachTimeline","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","maxDefaults","applyDefaultFilter","slice","split","number","match","unit","defaultValue","functionRegex","filter","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","MotionGlobalConfig","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","isHandoff","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","isNumericalString","testValueType","dimensionValueTypes","vw","vh","parse","findDimensionValueType","find","valueTypes","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","hasKeyframesChanged","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","HandoffAppearAnimations","appearId","canSkip","shouldReduceMotion","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","shouldAnimateType","checkVariantsDidChange","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","valueHasChanged","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","_a","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","contextWindow","dragSnapToOrigin","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","getContextWindow","ownerDocument","defaultView","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","createTransformer","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEqualsRounded","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","hiddenVisibility","visibility","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","to","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","_b","styles","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","token","fallback","exec","parseCSSVariable","getPropertyValue","trimmed","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","require","filterProps","isDom","filteredProps","checkStringStartsWith","isCSSVariableName","isCSSVariableToken","cssVariableRegex","addUniqueItem","arr","item","removeItem","warning","invariant","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","isClamp","inputLength","interpolator","progressInRange","isBrowser","any","defaultOffset","remaining","offsetProgress","fillOffset","combineFunctions","transformers","toFromDifference","SubscriptionManager","subscriptions","numSubscriptions","getSize","useConstant","init","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","collectMotionValues","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","isColorString","testProp","splitColor","aName","bName","cName","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","parseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith","degrees","percent","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString"],"sourceRoot":""}