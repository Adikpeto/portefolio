{"version":3,"file":"60ba243a40f8a55674d264664bf4e5ac1d1a1b10-69a9e5d01479964886b6.js","mappings":"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","sources":["webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/utils.mjs"],"sourcesContent":["import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = (timestamp) => {\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing)\n            scheduleNextBatch(processBatch);\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { cancelFrame, frame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get timeline() {\n            return animation.timeline;\n        },\n        set timeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nlet roundPoint;\nconst isWebKit = () => navigator.userAgent.toLowerCase().includes(\"applewebkit/\");\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    // Detect browser only client-side\n    if (!roundPoint) {\n        roundPoint = isWebKit()\n            ? Math.round\n            : (point) => Math.round(point * 2) / 2;\n    }\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.13.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.13.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","const noop = (any) => any;\n\nexport { noop };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.13.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n"],"names":["MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","stepsOrder","schedule","cancel","cancelFrame","state","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","reduce","acc","key","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","indexOf","push","length","index","splice","delete","process","i","has","createRenderStep","processStep","stepId","processBatch","Math","max","min","forEach","createRenderBatcher","requestAnimationFrame","noop","MotionContext","LazyContext","strict","isRefObject","ref","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","context","undefined","inherit","getCurrentTreeVariants","useContext","useMemo","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","useRef","renderer","current","blockInitialAnimation","useInsertionEffect","update","render","useEffect","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","Provider","value","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","test","scaleCorrectors","transformPropOrder","transformProps","Set","isForcedMotionValue","startsWith","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","getValueAsType","type","transform","round","numberValueTypes","borderWidth","px","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scale","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","default","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","elementProps","children","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","config","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","values","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","resolved","transitionEnd","transition","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","document","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","pipe","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","a","b","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","interpolate","calculatedDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","stiffness","damping","sqrt","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","reverse","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","progress","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","complex","maxDefaults","applyDefaultFilter","slice","split","number","match","unit","defaultValue","functionRegex","filter","getAnimatableNone","functions","defaultValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","testValueType","dimensionValueTypes","vw","vh","parse","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","hasAnimated","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","notify","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","_a","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","parseFloat","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","motionValue","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","template","createTransformer","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","data","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","read","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundPoint","isWebKit","roundAxis","roundBox","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","output","to","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","_b","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","clear","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","navigator","userAgent","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","token","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","unsubscribe","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","parsed","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","validMotionProps","isValidMotionProp","shouldForward","loadExternalIsValidProp","isValidProp","require","filterProps","isDom","filteredProps","checkStringStartsWith","isCSSVariableName","isCSSVariableToken","cssVariableRegex","addUniqueItem","arr","item","removeItem","warning","invariant","hueToRgb","q","mixLinearColor","fromExpo","colorTypes","hex","rgba","hsla","asRGBA","model","hue","saturation","lightness","alpha","red","green","blue","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","mixImmediate","getMixer","mixComplex","mixArray","numValues","blendValue","fromThis","mixObject","originStats","targetStats","numVars","numColors","numNumbers","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","input","isClamp","inputLength","interpolator","progressInRange","isBrowser","any","defaultOffset","remaining","offsetProgress","fillOffset","combineFunctions","transformers","toFromDifference","SubscriptionManager","subscriptions","numSubscriptions","getSize","useConstant","init","useIsomorphicLayoutEffect","useLayoutEffect","velocityPerSecond","frameDuration","MotionValue","version","lastUpdated","canTrackVelocity","updateAndNotify","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","r","parseInt","alpha$1","rgbUnit","clampRgbUnit","isColorString","testProp","splitColor","aName","bName","cName","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","parseComplexValue","convertNumbersToZero","transformer","createUnitType","endsWith","degrees","percent","progressPercentage","sanitize","floatRegex","colorRegex","singleColorRegex","isString"],"sourceRoot":""}