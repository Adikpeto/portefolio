{"version":3,"file":"component---src-pages-porte-folio-index-js-af9103084dace22e68f0.js","mappings":"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","sources":["webpack://myportefolioremarkesite/./src/pages/porteFolio/data.js","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/components/MotionConfig/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/motion-proxy.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/is-css-variable.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/get-as-type.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/clamp.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/numbers/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/utils.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/numbers/units.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/type-int.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/number.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/transform-origin.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/resolve-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/pipe.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/noop.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/frameloop/batcher.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/frameloop/frame.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/frameloop/render-step.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/errors.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/time-conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/cubic-bezier.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/ease.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/utils/is-easing-array.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/modifiers/mirror.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/modifiers/reverse.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/circ.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/back.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/utils/map.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/easing/anticipate.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/utils.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/rgba.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/hex.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/hsla.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/color/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/mix.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/hsla-to-rgba.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/mix-color.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/complex/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/mix-complex.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/progress.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/interpolate.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/offsets/default.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/offsets/fill.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/keyframes.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/offsets/time.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/velocity-per-second.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/utils/velocity.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/spring/find.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/spring/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/inertia.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/js/driver-frameloop.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/generators/utils/calc-duration.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/js/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/memo.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/animators/instant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/array.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/subscription-manager.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/value/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/debug/record.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/motion.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://myportefolioremarkesite/./node_modules/framer-motion/dist/es/render/dom/utils/create-config.mjs","webpack://myportefolioremarkesite/./src/components/workCard/workCard.jsx","webpack://myportefolioremarkesite/./src/pages/porteFolio/index.js"],"sourcesContent":["const data = [ \r\n    {\r\n        date:\"2015-2018\",\r\n        title:\"Moon light - UI/UX Développement.\",\r\n        titleProjet:\"Dans plusieurs langages à las aussi de ma capacité à comprend.\",\r\n        descriptionProjet:\"du développement web car c’est ce qui me passionne. J’aimerais contribuer à la réalisation de vos sites, pages et applications à l’aide de ma connaissance du développement frontend et backend, mais aussi de ma capacité à comprend.\"\r\n    },\r\n    {\r\n        date:\"2020-2023\",\r\n        title:\"Fashion - Développement web.\",\r\n        titleProjet:\"Dans plusieurs langages à las aussi de ma capacité à comprend.\",\r\n        descriptionProjet:\"du développement web car c’est ce qui me passionne. J’aimerais contribuer à la réalisation de vos sites, pages et applications à l’aide de ma connaissance du développement frontend et backend, mais aussi de ma capacité à comprend.\"\r\n    }\r\n]\r\nexport default data","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"transformValues\",\n    \"custom\",\n    \"inherit\",\n    \"onLayoutAnimationStart\",\n    \"onLayoutAnimationComplete\",\n    \"onLayoutMeasure\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] && key.startsWith(\"onDrag\"))) {\n            filteredProps[key] = props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import * as React from 'react';\nimport { useContext, useMemo } from 'react';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { loadExternalIsValidProp } from '../../render/dom/utils/filter-props.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\n\n/**\n * `MotionConfig` is used to set configuration options for all children `motion` components.\n *\n * ```jsx\n * import { motion, MotionConfig } from \"framer-motion\"\n *\n * export function App() {\n *   return (\n *     <MotionConfig transition={{ type: \"spring\" }}>\n *       <motion.div animate={{ x: 100 }} />\n *     </MotionConfig>\n *   )\n * }\n * ```\n *\n * @public\n */\nfunction MotionConfig({ children, isValidProp, ...config }) {\n    isValidProp && loadExternalIsValidProp(isValidProp);\n    /**\n     * Inherit props from any parent MotionConfig components\n     */\n    config = { ...useContext(MotionConfigContext), ...config };\n    /**\n     * Don't allow isStatic to change between renders as it affects how many hooks\n     * motion components fire.\n     */\n    config.isStatic = useConstant(() => config.isStatic);\n    /**\n     * Creating a new config context object will re-render every `motion` component\n     * every time it renders. So we only want to create a new one sparingly.\n     */\n    const context = useMemo(() => config, [JSON.stringify(config.transition), config.transformPagePoint, config.reducedMotion]);\n    return (React.createElement(MotionConfigContext.Provider, { value: context }, children));\n}\n\nexport { MotionConfig };\n","import { createContext } from 'react';\n\nconst MotionContext = createContext({});\n\nexport { MotionContext };\n","import { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = createContext(null);\n\nexport { PresenceContext };\n","const isBrowser = typeof document !== \"undefined\";\n\nexport { isBrowser };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","function isRefObject(ref) {\n    return (typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","function isAnimationControls(v) {\n    return typeof v === \"object\" && typeof v.start === \"function\";\n}\n\nexport { isAnimationControls };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\nimport { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","import { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","import { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import * as React from 'react';\nimport { forwardRef, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { SwitchLayoutGroupContext } from '../context/SwitchLayoutGroupContext.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement);\n            /**\n             * Load Motion gesture and animation features. These are rendered as renderless\n             * components so each feature can optionally make use of React lifecycle methods.\n             */\n            const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n            const isStrict = useContext(LazyContext).strict;\n            if (context.visualElement) {\n                MeasureLayout = context.visualElement.loadFeatures(\n                // Note: Pass the full new combined props to correctly re-render dynamic feature components.\n                configAndProps, isStrict, preloadedFeatures, initialLayoutGroupConfig);\n            }\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (React.createElement(MotionContext.Provider, { value: context },\n            MeasureLayout && context.visualElement ? (React.createElement(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null,\n            useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)));\n    }\n    const ForwardRefComponent = forwardRef(MotionComponent);\n    ForwardRefComponent[motionComponentSymbol] = Component;\n    return ForwardRefComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\n\nexport { createMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef();\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    useInsertionEffect(() => {\n        visualElement && visualElement.update(props, presenceContext);\n    });\n    useIsomorphicLayoutEffect(() => {\n        visualElement && visualElement.render();\n    });\n    useEffect(() => {\n        visualElement && visualElement.updateFeatures();\n    });\n    /**\n     * Ideally this function would always run in a useEffect.\n     *\n     * However, if we have optimised appear animations to handoff from,\n     * it needs to happen synchronously to ensure there's no flash of\n     * incorrect styles in the event of a hydration error.\n     *\n     * So if we detect a situtation where optimised appear animations\n     * are running, we use useLayoutEffect to trigger animations.\n     */\n    const useAnimateChangesEffect = window.HandoffAppearAnimations\n        ? useIsomorphicLayoutEffect\n        : useEffect;\n    useAnimateChangesEffect(() => {\n        if (visualElement && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    return visualElement;\n}\n\nexport { useVisualElement };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        instance && visualState.mount && visualState.mount(instance);\n        if (visualElement) {\n            instance\n                ? visualElement.mount(instance)\n                : visualElement.unmount();\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { createMotionComponent } from '../../motion/index.mjs';\n\n/**\n * Convert any React component into a `motion` component. The provided component\n * **must** use `React.forwardRef` to the underlying DOM component you want to animate.\n *\n * ```jsx\n * const Component = React.forwardRef((props, ref) => {\n *   return <div ref={ref} />\n * })\n *\n * const MotionComponent = motion(Component)\n * ```\n *\n * @public\n */\nfunction createMotionProxy(createConfig) {\n    function custom(Component, customMotionComponentConfig = {}) {\n        return createMotionComponent(createConfig(Component, customMotionComponentConfig));\n    }\n    if (typeof Proxy === \"undefined\") {\n        return custom;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    return new Proxy(custom, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, custom(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createMotionProxy };\n","/**\n * We keep these listed seperately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","const scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    Object.assign(scaleCorrectors, correctors);\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = new Set(transformPropOrder);\n\nexport { transformPropOrder, transformProps };\n","import { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { transformPropOrder } from './transform.mjs';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(transform, { enableHardwareAcceleration = true, allowTransformNone = true, }, transformIsDefault, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        if (transform[key] !== undefined) {\n            const transformName = translateAlias[key] || key;\n            transformString += `${transformName}(${transform[key]}) `;\n        }\n    }\n    if (enableHardwareAcceleration && !transform.z) {\n        transformString += \"translateZ(0)\";\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (allowTransformNone && transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = checkStringStartsWith(\"--\");\nconst isCSSVariableToken = checkStringStartsWith(\"var(--\");\nconst cssVariableRegex = /var\\s*\\(\\s*--[\\w-]+(\\s*,\\s*(?:(?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)+)?\\s*\\)/g;\n\nexport { cssVariableRegex, isCSSVariableName, isCSSVariableToken };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","const clamp = (min, max, v) => Math.min(Math.max(v, min), max);\n\nexport { clamp };\n","import { clamp } from '../../../utils/clamp.mjs';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","/**\n * TODO: When we move from string as a source of truth to data models\n * everything in this folder should probably be referred to as models vs types\n */\n// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\nconst floatRegex = /(-)?([\\d]*\\.?[\\d])+/g;\nconst colorRegex = /(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))/gi;\nconst singleColorRegex = /^(#[0-9a-f]{3,8}|(rgb|hsl)a?\\((-?[\\d\\.]+%?[,\\s]+){2}(-?[\\d\\.]+%?)\\s*[\\,\\/]?\\s*[\\d\\.]*%?\\))$/i;\nfunction isString(v) {\n    return typeof v === \"string\";\n}\n\nexport { colorRegex, floatRegex, isString, sanitize, singleColorRegex };\n","import { isString } from '../utils.mjs';\n\nconst createUnitType = (unit) => ({\n    test: (v) => isString(v) && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = createUnitType(\"deg\");\nconst percent = createUnitType(\"%\");\nconst px = createUnitType(\"px\");\nconst vh = createUnitType(\"vh\");\nconst vw = createUnitType(\"vw\");\nconst progressPercentage = {\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n};\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","import { number } from '../../../value/types/numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../../../value/types/numbers/index.mjs';\nimport { px, degrees, progressPercentage } from '../../../value/types/numbers/units.mjs';\nimport { int } from './type-int.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    size: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Transform props\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n    // Misc\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { buildTransform } from './build-transform.mjs';\nimport { isCSSVariableName } from '../../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './transform.mjs';\nimport { getValueAsType } from '../../dom/value-types/get-as-type.mjs';\nimport { numberValueTypes } from '../../dom/value-types/number.mjs';\n\nfunction buildHTMLStyles(state, latestValues, options, transformTemplate) {\n    const { style, vars, transform, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    // Does the calculated transform essentially equal \"none\"?\n    let transformIsNone = true;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept seperately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        /**\n         * If this is a CSS variable we don't do any further processing.\n         */\n        if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        // Convert the value to its default value type, ie 0 -> \"0px\"\n        const valueType = numberValueTypes[key];\n        const valueAsType = getValueAsType(value, valueType);\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            transform[key] = valueAsType;\n            // If we already know we have a non-default transform, early return\n            if (!transformIsNone)\n                continue;\n            // Otherwise check to see if this is a default transform\n            if (value !== (valueType.default || 0))\n                transformIsNone = false;\n        }\n        else if (key.startsWith(\"origin\")) {\n            // If this is a transform origin, flag and enable further transform-origin processing\n            hasTransformOrigin = true;\n            transformOrigin[key] = valueAsType;\n        }\n        else {\n            style[key] = valueAsType;\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(state.transform, options, transformIsNone, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState, isStatic) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, { enableHardwareAcceleration: !isStatic }, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState, isStatic) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState, isStatic));\n    return props.transformValues ? props.transformValues(style) : style;\n}\nfunction useHTMLProps(props, visualState, isStatic) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState, isStatic);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nfunction calcOrigin(origin, offset, size) {\n    return typeof origin === \"string\"\n        ? origin\n        : px.transform(offset + size * origin);\n}\n/**\n * The SVG transform origin defaults are different to CSS and is less intuitive,\n * so we use the measured dimensions of the SVG to reconcile these.\n */\nfunction calcSVGTransformOrigin(dimensions, originX, originY) {\n    const pxOriginX = calcOrigin(originX, dimensions.x, dimensions.width);\n    const pxOriginY = calcOrigin(originY, dimensions.y, dimensions.height);\n    return `${pxOriginX} ${pxOriginY}`;\n}\n\nexport { calcSVGTransformOrigin };\n","import { px } from '../../../value/types/numbers/units.mjs';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { calcSVGTransformOrigin } from './transform-origin.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, originX, originY, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, options, isSVGTag, transformTemplate) {\n    buildHTMLStyles(state, latest, options, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style, dimensions } = state;\n    /**\n     * However, we apply transforms as CSS transforms. So if we detect a transform we take it from attrs\n     * and copy it into style.\n     */\n    if (attrs.transform) {\n        if (dimensions)\n            style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    // Parse transformOrigin\n    if (dimensions &&\n        (originX !== undefined || originY !== undefined || style.transform)) {\n        style.transformOrigin = calcSVGTransformOrigin(dimensions, originX !== undefined ? originX : 0.5, originY !== undefined ? originY : 0.5);\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, { enableHardwareAcceleration: false }, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = {\n            ...filteredProps,\n            ...visualProps,\n            ref,\n        };\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/g, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style && isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props)) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps);\n    for (const key in props) {\n        if (isMotionValue(props[key]) || isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","function resolveVariantFromProps(props, definition, custom, currentValues = {}, currentVelocity = {}) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        definition = definition(custom !== undefined ? custom : props.custom, currentValues, currentVelocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { isKeyframesTarget } from '../animation/utils/is-keyframes-target.mjs';\n\nconst isCustomValue = (v) => {\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\nconst resolveFinalValueInKeyframes = (v) => {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nexport { isCustomValue, resolveFinalValueInKeyframes };\n","import { isCustomValue } from '../../utils/resolve-value.mjs';\nimport { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    const unwrappedValue = isMotionValue(value) ? value.get() : value;\n    return isCustomValue(unwrappedValue)\n        ? unwrappedValue.toValue()\n        : unwrappedValue;\n}\n\nexport { resolveMotionValue };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onMount, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onMount) {\n        state.mount = (instance) => onMount(props, instance, state);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        list.forEach((definition) => {\n            const resolved = resolveVariantFromProps(props, definition);\n            if (!resolved)\n                return;\n            const { transitionEnd, transition, ...target } = resolved;\n            for (const key in target) {\n                let valueTarget = target[key];\n                if (Array.isArray(valueTarget)) {\n                    /**\n                     * Take final keyframe if the initial animation is blocked because\n                     * we want to initialise at the end of that blocked animation.\n                     */\n                    const index = isInitialAnimationBlocked\n                        ? valueTarget.length - 1\n                        : 0;\n                    valueTarget = valueTarget[index];\n                }\n                if (valueTarget !== null) {\n                    values[key] = valueTarget;\n                }\n            }\n            for (const key in transitionEnd)\n                values[key] = transitionEnd[key];\n        });\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onMount: (props, instance, { renderState, latestValues }) => {\n            try {\n                renderState.dimensions =\n                    typeof instance.getBBox ===\n                        \"function\"\n                        ? instance.getBBox()\n                        : instance.getBoundingClientRect();\n            }\n            catch (e) {\n                // Most likely trying to measure an unrendered element under Firefox\n                renderState.dimensions = {\n                    x: 0,\n                    y: 0,\n                    width: 0,\n                    height: 0,\n                };\n            }\n            buildSVGAttrs(renderState, latestValues, { enableHardwareAcceleration: false }, isSVGTag(instance.tagName), props.transformTemplate);\n            renderSVG(instance, renderState);\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const noop = (any) => any;\n\nexport { noop };\n","import { createRenderStep } from './render-step.mjs';\n\nconst stepsOrder = [\n    \"prepare\",\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0,\n        timestamp: 0,\n        isProcessing: false,\n    };\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(() => (runNextFrame = true));\n        return acc;\n    }, {});\n    const processStep = (stepId) => steps[stepId].process(state);\n    const processBatch = (timestamp) => {\n        runNextFrame = false;\n        state.delta = useDefaultElapsed\n            ? 1000 / 60\n            : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        stepsOrder.forEach(processStep);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing)\n            scheduleNextBatch(processBatch);\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => stepsOrder.forEach((key) => steps[key].cancel(process));\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher, stepsOrder };\n","import { noop } from '../utils/noop.mjs';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps, } = createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, steps };\n","function createRenderStep(runNextFrame) {\n    /**\n     * We create and reuse two arrays, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let toRun = [];\n    let toRunNextFrame = [];\n    /**\n     *\n     */\n    let numToRun = 0;\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            // If the buffer doesn't already contain this callback, add it\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                // If we're adding it to the currently running buffer, update its measured size\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            // Clear the next frame list\n            toRunNextFrame.length = 0;\n            // Execute this frame\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { noop } from './noop.mjs';\n\nlet warning = noop;\nlet invariant = noop;\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","import { noop } from '../utils/noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = cubicBezier(0.42, 0, 1, 1);\nconst easeOut = cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circOut);\n\nexport { circIn, circInOut, circOut };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = reverseEasing(backOut);\nconst backInOut = mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { invariant } from '../../utils/errors.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { anticipate } from '../anticipate.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (Array.isArray(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (typeof definition === \"string\") {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { isString, singleColorRegex, floatRegex } from '../utils.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((isString(v) && singleColorRegex.test(v) && v.startsWith(type)) ||\n        (testProp && Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (!isString(v))\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","import { clamp } from '../../../utils/clamp.mjs';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: isColorString(\"rgb\", \"red\"),\n    parse: splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: isColorString(\"hsl\", \"hue\"),\n    parse: splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","import { isString } from '../utils.mjs';\nimport { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return isString(v)\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mix = (from, to, progress) => -progress * from + progress * to + from;\n\nexport { mix };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","import { mix } from './mix.mjs';\nimport { invariant } from './errors.mjs';\nimport { hslaToRgba } from './hsla-to-rgba.mjs';\nimport { hex } from '../value/types/color/hex.mjs';\nimport { rgba } from '../value/types/color/rgba.mjs';\nimport { hsla } from '../value/types/color/hsla.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    return Math.sqrt(Math.max(0, v * (to * to - fromExpo) + fromExpo));\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    invariant(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Framer Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mix(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","import { cssVariableRegex } from '../../../render/dom/utils/is-css-variable.mjs';\nimport { noop } from '../../../utils/noop.mjs';\nimport { color } from '../color/index.mjs';\nimport { number } from '../numbers/index.mjs';\nimport { colorRegex, floatRegex, isString, sanitize } from '../utils.mjs';\n\nfunction test(v) {\n    var _a, _b;\n    return (isNaN(v) &&\n        isString(v) &&\n        (((_a = v.match(floatRegex)) === null || _a === void 0 ? void 0 : _a.length) || 0) +\n            (((_b = v.match(colorRegex)) === null || _b === void 0 ? void 0 : _b.length) || 0) >\n            0);\n}\nconst cssVarTokeniser = {\n    regex: cssVariableRegex,\n    countKey: \"Vars\",\n    token: \"${v}\",\n    parse: noop,\n};\nconst colorTokeniser = {\n    regex: colorRegex,\n    countKey: \"Colors\",\n    token: \"${c}\",\n    parse: color.parse,\n};\nconst numberTokeniser = {\n    regex: floatRegex,\n    countKey: \"Numbers\",\n    token: \"${n}\",\n    parse: number.parse,\n};\nfunction tokenise(info, { regex, countKey, token, parse }) {\n    const matches = info.tokenised.match(regex);\n    if (!matches)\n        return;\n    info[\"num\" + countKey] = matches.length;\n    info.tokenised = info.tokenised.replace(regex, token);\n    info.values.push(...matches.map(parse));\n}\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const info = {\n        value: originalValue,\n        tokenised: originalValue,\n        values: [],\n        numVars: 0,\n        numColors: 0,\n        numNumbers: 0,\n    };\n    if (info.value.includes(\"var(--\"))\n        tokenise(info, cssVarTokeniser);\n    tokenise(info, colorTokeniser);\n    tokenise(info, numberTokeniser);\n    return info;\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { values, numColors, numVars, tokenised } = analyseComplexValue(source);\n    const numValues = values.length;\n    return (v) => {\n        let output = tokenised;\n        for (let i = 0; i < numValues; i++) {\n            if (i < numVars) {\n                output = output.replace(cssVarTokeniser.token, v[i]);\n            }\n            else if (i < numVars + numColors) {\n                output = output.replace(colorTokeniser.token, color.transform(v[i]));\n            }\n            else {\n                output = output.replace(numberTokeniser.token, sanitize(v[i]));\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","import { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { pipe } from './pipe.mjs';\nimport { warning } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../value/types/complex/index.mjs';\n\nconst mixImmediate = (origin, target) => (p) => `${p > 0 ? target : origin}`;\nfunction getMixer(origin, target) {\n    if (typeof origin === \"number\") {\n        return (v) => mix(origin, target, v);\n    }\n    else if (color.test(origin)) {\n        return mixColor(origin, target);\n    }\n    else {\n        return origin.startsWith(\"var(\")\n            ? mixImmediate(origin, target)\n            : mixComplex(origin, target);\n    }\n}\nconst mixArray = (from, to) => {\n    const output = [...from];\n    const numValues = output.length;\n    const blendValue = from.map((fromThis, i) => getMixer(fromThis, to[i]));\n    return (v) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](v);\n        }\n        return output;\n    };\n};\nconst mixObject = (origin, target) => {\n    const output = { ...origin, ...target };\n    const blendValue = {};\n    for (const key in output) {\n        if (origin[key] !== undefined && target[key] !== undefined) {\n            blendValue[key] = getMixer(origin[key], target[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n};\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.numVars === targetStats.numVars &&\n        originStats.numColors === targetStats.numColors &&\n        originStats.numNumbers >= targetStats.numNumbers;\n    if (canInterpolate) {\n        return pipe(mixArray(originStats.values, targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { mixArray, mixComplex, mixObject };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","import { invariant } from './errors.mjs';\nimport { color } from '../value/types/color/index.mjs';\nimport { clamp } from './clamp.mjs';\nimport { mix } from './mix.mjs';\nimport { mixColor } from './mix-color.mjs';\nimport { mixComplex, mixArray, mixObject } from './mix-complex.mjs';\nimport { pipe } from './pipe.mjs';\nimport { progress } from './progress.mjs';\nimport { noop } from './noop.mjs';\n\nconst mixNumber = (from, to) => (p) => mix(from, to, p);\nfunction detectMixerFactory(v) {\n    if (typeof v === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof v === \"string\") {\n        return color.test(v) ? mixColor : mixComplex;\n    }\n    else if (Array.isArray(v)) {\n        return mixArray;\n    }\n    else if (typeof v === \"object\") {\n        return mixObject;\n    }\n    return mixNumber;\n}\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || detectMixerFactory(output[0]);\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { mix } from '../mix.mjs';\nimport { progress } from '../progress.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mix(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { easeInOut } from '../../easing/ease.mjs';\nimport { isEasingArray } from '../../easing/utils/is-easing-array.mjs';\nimport { easingDefinitionToFunction } from '../../easing/utils/map.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../../utils/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../../utils/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { velocityPerSecond } from '../../../utils/velocity-per-second.mjs';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","import { warning } from '../../../utils/errors.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\n\nconst safeMin = 0.001;\nconst minDuration = 0.01;\nconst maxDuration = 10.0;\nconst minDamping = 0.05;\nconst maxDamping = 1;\nfunction findSpring({ duration = 800, bounce = 0.25, velocity = 0, mass = 1, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(minDamping, maxDamping, dampingRatio);\n    duration = clamp(minDuration, maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: 100,\n            damping: 10,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring, maxDamping, maxDuration, minDamping, minDuration };\n","import { millisecondsToSeconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: 0.0,\n        stiffness: 100,\n        damping: 10,\n        mass: 1.0,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = {\n            ...springOptions,\n            ...derived,\n            velocity: 0.0,\n            mass: 1.0,\n        };\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring({ keyframes, restDelta, restSpeed, ...options }) {\n    const origin = keyframes[0];\n    const target = keyframes[keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    const initialVelocity = velocity ? -millisecondsToSeconds(velocity) : 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale ? 0.01 : 2);\n    restDelta || (restDelta = isGranularScale ? 0.005 : 0.5);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    return {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = initialVelocity;\n                if (t !== 0) {\n                    /**\n                     * We only need to calculate velocity for under-damped springs\n                     * as over- and critically-damped springs can't overshoot, so\n                     * checking only for displacement is enough.\n                     */\n                    if (dampingRatio < 1) {\n                        currentVelocity = calcGeneratorVelocity(resolveSpring, t, current);\n                    }\n                    else {\n                        currentVelocity = 0;\n                    }\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n    };\n}\n\nexport { spring };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value),\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t > timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { frame, cancelFrame, frameData } from '../../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: () => frame.update(passTimestamp, true),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => frameData.isProcessing ? frameData.timestamp : performance.now(),\n    };\n};\n\nexport { frameloopDriver };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { keyframes } from '../../generators/keyframes.mjs';\nimport { spring } from '../../generators/spring/index.mjs';\nimport { inertia } from '../../generators/inertia.mjs';\nimport { frameloopDriver } from './driver-frameloop.mjs';\nimport { interpolate } from '../../../utils/interpolate.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { calcGeneratorDuration } from '../../generators/utils/calc-duration.mjs';\n\nconst types = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\n/**\n * Animate a single value on the main thread.\n *\n * This function is written, where functionality overlaps,\n * to be largely spec-compliant with WAAPI to allow fungibility\n * between the two.\n */\nfunction animateValue({ autoplay = true, delay = 0, driver = frameloopDriver, keyframes: keyframes$1, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", onPlay, onStop, onComplete, onUpdate, ...options }) {\n    let speed = 1;\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let animationDriver;\n    const generatorFactory = types[type] || keyframes;\n    /**\n     * If this isn't the keyframes generator and we've been provided\n     * strings as keyframes, we need to interpolate these.\n     * TODO: Support velocity for units and complex value types/\n     */\n    let mapNumbersToKeyframes;\n    if (generatorFactory !== keyframes &&\n        typeof keyframes$1[0] !== \"number\") {\n        mapNumbersToKeyframes = interpolate([0, 100], keyframes$1, {\n            clamp: false,\n        });\n        keyframes$1 = [0, 100];\n    }\n    const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n    let mirroredGenerator;\n    if (repeatType === \"mirror\") {\n        mirroredGenerator = generatorFactory({\n            ...options,\n            keyframes: [...keyframes$1].reverse(),\n            velocity: -(options.velocity || 0),\n        });\n    }\n    let playState = \"idle\";\n    let holdTime = null;\n    let startTime = null;\n    let cancelTime = null;\n    /**\n     * If duration is undefined and we have repeat options,\n     * we need to calculate a duration from the generator.\n     *\n     * We set it to the generator itself to cache the duration.\n     * Any timeline resolver will need to have already precalculated\n     * the duration by this step.\n     */\n    if (generator.calculatedDuration === null && repeat) {\n        generator.calculatedDuration = calcGeneratorDuration(generator);\n    }\n    const { calculatedDuration } = generator;\n    let resolvedDuration = Infinity;\n    let totalDuration = Infinity;\n    if (calculatedDuration !== null) {\n        resolvedDuration = calculatedDuration + repeatDelay;\n        totalDuration = resolvedDuration * (repeat + 1) - repeatDelay;\n    }\n    let currentTime = 0;\n    const tick = (timestamp) => {\n        if (startTime === null)\n            return;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (speed > 0)\n            startTime = Math.min(startTime, timestamp);\n        if (speed < 0)\n            startTime = Math.min(timestamp - totalDuration / speed, startTime);\n        if (holdTime !== null) {\n            currentTime = holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            currentTime = Math.round(timestamp - startTime) * speed;\n        }\n        // Rebase on delay\n        const timeWithoutDelay = currentTime - delay * (speed >= 0 ? 1 : -1);\n        const isInDelayPhase = speed >= 0 ? timeWithoutDelay < 0 : timeWithoutDelay > totalDuration;\n        currentTime = Math.max(timeWithoutDelay, 0);\n        /**\n         * If this animation has finished, set the current time\n         * to the total duration.\n         */\n        if (playState === \"finished\" && holdTime === null) {\n            currentTime = totalDuration;\n        }\n        let elapsed = currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = currentTime / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const iterationIsOdd = Boolean(currentIteration % 2);\n            if (iterationIsOdd) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            let p = clamp(0, 1, iterationProgress);\n            if (currentTime > totalDuration) {\n                p = repeatType === \"reverse\" && iterationIsOdd ? 1 : 0;\n            }\n            elapsed = p * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes$1[0] }\n            : frameGenerator.next(elapsed);\n        if (mapNumbersToKeyframes) {\n            state.value = mapNumbersToKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done = speed >= 0 ? currentTime >= totalDuration : currentTime <= 0;\n        }\n        const isAnimationFinished = holdTime === null &&\n            (playState === \"finished\" || (playState === \"running\" && done));\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            finish();\n        }\n        return state;\n    };\n    const stopAnimationDriver = () => {\n        animationDriver && animationDriver.stop();\n        animationDriver = undefined;\n    };\n    const cancel = () => {\n        playState = \"idle\";\n        stopAnimationDriver();\n        resolveFinishedPromise();\n        updateFinishedPromise();\n        startTime = cancelTime = null;\n    };\n    const finish = () => {\n        playState = \"finished\";\n        onComplete && onComplete();\n        stopAnimationDriver();\n        resolveFinishedPromise();\n    };\n    const play = () => {\n        if (hasStopped)\n            return;\n        if (!animationDriver)\n            animationDriver = driver(tick);\n        const now = animationDriver.now();\n        onPlay && onPlay();\n        if (holdTime !== null) {\n            startTime = now - holdTime;\n        }\n        else if (!startTime || playState === \"finished\") {\n            startTime = now;\n        }\n        if (playState === \"finished\") {\n            updateFinishedPromise();\n        }\n        cancelTime = startTime;\n        holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        playState = \"running\";\n        animationDriver.start();\n    };\n    if (autoplay) {\n        play();\n    }\n    const controls = {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(currentTime);\n        },\n        set time(newTime) {\n            newTime = secondsToMilliseconds(newTime);\n            currentTime = newTime;\n            if (holdTime !== null || !animationDriver || speed === 0) {\n                holdTime = newTime;\n            }\n            else {\n                startTime = animationDriver.now() - newTime / speed;\n            }\n        },\n        get duration() {\n            const duration = generator.calculatedDuration === null\n                ? calcGeneratorDuration(generator)\n                : generator.calculatedDuration;\n            return millisecondsToSeconds(duration);\n        },\n        get speed() {\n            return speed;\n        },\n        set speed(newSpeed) {\n            if (newSpeed === speed || !animationDriver)\n                return;\n            speed = newSpeed;\n            controls.time = millisecondsToSeconds(currentTime);\n        },\n        get state() {\n            return playState;\n        },\n        play,\n        pause: () => {\n            playState = \"paused\";\n            holdTime = currentTime;\n        },\n        stop: () => {\n            hasStopped = true;\n            if (playState === \"idle\")\n                return;\n            playState = \"idle\";\n            onStop && onStop();\n            cancel();\n        },\n        cancel: () => {\n            if (cancelTime !== null)\n                tick(cancelTime);\n            cancel();\n        },\n        complete: () => {\n            playState = \"finished\";\n        },\n        sample: (elapsed) => {\n            startTime = 0;\n            return tick(elapsed);\n        },\n    };\n    return controls;\n}\n\nexport { animateValue };\n","import { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\nimport { memo } from '../../../utils/memo.mjs';\nimport { cancelFrame, frame } from '../../../frameloop/frame.mjs';\n\nconst supportsWaapi = memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supportsWaapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get timeline() {\n            return animation.timeline;\n        },\n        set timeline(timeline) {\n            animation.timeline = timeline;\n            animation.onfinish = null;\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","function memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { velocityPerSecond } from '../utils/velocity-per-second.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { frame, frameData } from '../frameloop/frame.mjs';\n\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     *\n     * @internal\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"10.13.0\";\n        /**\n         * Duration, in milliseconds, since last updating frame.\n         *\n         * @internal\n         */\n        this.timeDelta = 0;\n        /**\n         * Timestamp of the last time this `MotionValue` was updated.\n         *\n         * @internal\n         */\n        this.lastUpdated = 0;\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = false;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            this.prev = this.current;\n            this.current = v;\n            // Update timestamp\n            const { delta, timestamp } = frameData;\n            if (this.lastUpdated !== timestamp) {\n                this.timeDelta = delta;\n                this.lastUpdated = timestamp;\n                frame.postRender(this.scheduleVelocityCheck);\n            }\n            // Update update subscribers\n            if (this.prev !== this.current && this.events.change) {\n                this.events.change.notify(this.current);\n            }\n            // Update velocity subscribers\n            if (this.events.velocityChange) {\n                this.events.velocityChange.notify(this.getVelocity());\n            }\n            // Update render subscribers\n            if (render && this.events.renderRequest) {\n                this.events.renderRequest.notify(this.current);\n            }\n        };\n        /**\n         * Schedule a velocity check for the next frame.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.scheduleVelocityCheck = () => frame.postRender(this.velocityCheck);\n        /**\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\n         * This ensures velocity calculations return `0`.\n         *\n         * This is an instanced and bound function to prevent generating a new\n         * function once per frame.\n         *\n         * @internal\n         */\n        this.velocityCheck = ({ timestamp }) => {\n            if (timestamp !== this.lastUpdated) {\n                this.prev = this.current;\n                if (this.events.velocityChange) {\n                    this.events.velocityChange.notify(this.getVelocity());\n                }\n            }\n        };\n        this.hasAnimated = false;\n        this.prev = this.current = init;\n        this.canTrackVelocity = isFloat(this.current);\n        this.owner = options.owner;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     *\n     * @internal\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = prev;\n        this.timeDelta = delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n        return this.canTrackVelocity\n            ? // These casts could be avoided if parseFloat would be typed better\n                velocityPerSecond(parseFloat(this.current) -\n                    parseFloat(this.prev), this.timeDelta)\n            : 0;\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     *\n     * @internal\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, motionValue };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { cancelFrame, frameData, steps, frame } from '../../frameloop/frame.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nlet roundPoint;\nconst isWebKit = () => navigator.userAgent.toLowerCase().includes(\"applewebkit/\");\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    // Detect browser only client-side\n    if (!roundPoint) {\n        roundPoint = isWebKit()\n            ? Math.round\n            : (point) => Math.round(point * 2) / 2;\n    }\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.13.0\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.13.0 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            checkTargetForNewValues(this, target, origin);\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { createMotionComponent } from '../../motion/index.mjs';\nimport { createMotionProxy } from './motion-proxy.mjs';\nimport { createDomMotionConfig } from './utils/create-config.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { animations } from '../../motion/features/animations.mjs';\nimport { drag } from '../../motion/features/drag.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\n\nconst preloadedFeatures = {\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n};\n/**\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\n *\n * @public\n */\nconst motion = /*@__PURE__*/ createMotionProxy((Component, config) => createDomMotionConfig(Component, config, preloadedFeatures, createDomVisualElement));\n/**\n * Create a DOM `motion` component with the provided string. This is primarily intended\n * as a full alternative to `motion` for consumers who have to support environments that don't\n * support `Proxy`.\n *\n * ```javascript\n * import { createDomMotionComponent } from \"framer-motion\"\n *\n * const motion = {\n *   div: createDomMotionComponent('div')\n * }\n * ```\n *\n * @public\n */\nfunction createDomMotionComponent(key) {\n    return createMotionComponent(createDomMotionConfig(key, { forwardMotionProps: false }, preloadedFeatures, createDomVisualElement));\n}\n\nexport { createDomMotionComponent, motion };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { isSVGComponent } from './is-svg-component.mjs';\nimport { createUseRender } from '../use-render.mjs';\nimport { svgMotionConfig } from '../../svg/config-motion.mjs';\nimport { htmlMotionConfig } from '../../html/config-motion.mjs';\n\nfunction createDomMotionConfig(Component, { forwardMotionProps = false }, preloadedFeatures, createVisualElement) {\n    const baseConfig = isSVGComponent(Component)\n        ? svgMotionConfig\n        : htmlMotionConfig;\n    return {\n        ...baseConfig,\n        preloadedFeatures,\n        useRender: createUseRender(forwardMotionProps),\n        createVisualElement,\n        Component,\n    };\n}\n\nexport { createDomMotionConfig };\n","import React, { useRef, useReducer } from 'react'\r\nimport { gsap } from 'gsap'\r\nimport { motion, MotionConfig } from 'framer-motion'\r\nimport { navigate } from 'gatsby'\r\nimport \"./workCard.scss\"\r\nimport { AnimatePresence } from 'framer-motion'\r\n\r\n\r\nconst initialState = {\r\n\r\n    parallaxPos: { x: 0, y: 0 },\r\n\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    switch (action.type) {\r\n\r\n\r\n        case \"CHANGE/COORDINATES\":\r\n            return { ...state, parallaxPos: action.payload }\r\n            break;\r\n\r\n\r\n\r\n        default:\r\n            throw new Error(\"Message\")\r\n\r\n    }\r\n}\r\n\r\nfunction WorkCard({ projet }) {\r\n    const [state, dispatch] = useReducer(reducer, initialState)\r\n    const svgContainer = React.useRef()\r\n    const workContainer = React.useRef()\r\n    const timelineSvg = React.useRef()\r\n    const container = React.useRef()\r\n\r\n    const parallax = (event) => {\r\n        const speed = 3\r\n        const x = (window.innerWidth - event.pageX * speed) / 100\r\n        const y = (window.innerHeight - event.pageY * speed) / 100\r\n\r\n\r\n        dispatch({\r\n            type: \"CHANGE/COORDINATES\",\r\n            payload: { x: x, y: y }\r\n        })\r\n    }\r\n\r\n    const handleMouseEnter = () => {\r\n        workContainer.current.addEventListener(\"mousemove\", parallax)\r\n    }\r\n    const handleMouseLeave = () => {\r\n        workContainer.current.removeEventListener(\"mousemove\", parallax)\r\n\r\n        dispatch({\r\n            type: \"CHANGE/COORDINATES\",\r\n            payload: initialState.parallaxPos\r\n        })\r\n\r\n    }\r\n\r\n\r\n    React.useEffect(() => {\r\n        const curve = \"M0 502S175 272 500 272s500 230 500 230V0H0Z\"\r\n        const flat = \"M0 2S175 1 500 1s500 1 500 1V0H0Z\"\r\n        const initial = \"M0,1005S175,995,500,995s500,5,500,5V0H0Z\"\r\n\r\n        const ctx = gsap.context(() => {\r\n\r\n            timelineSvg.current = gsap.timeline()\r\n\r\n\r\n                .to(\"#svg\", {\r\n                    duration: 0.8,\r\n                    attr: { d: curve },\r\n                    ease: \"power2.easeIn\"\r\n                })\r\n                .to(\"#svg\", {\r\n                    duration: 0.5,\r\n                    attr: { d: initial },\r\n                    ease: \"power2.easeIn\"\r\n                })\r\n                .to(\".work-svg-hover\", {\r\n                    opacity: 1,\r\n                    ease: \"power2.easeIn\"\r\n                }, \"-=0.5\").from(\".work-title-custome\", {\r\n                    y: 250,\r\n                    skewY: 10,\r\n                    ease: \"power2.easeIn\"\r\n                }, \"-=0.4\").paused(true)\r\n\r\n\r\n\r\n\r\n        }, workContainer)\r\n\r\n\r\n\r\n\r\n\r\n    }, [workContainer])\r\n\r\n\r\n\r\n    React.useEffect(() => {\r\n        function resizeSvgConatiner() {\r\n            const sizeFunc = () => {\r\n                const infosContainerBounding = document.querySelector(\".work-infos-container\")?.getBoundingClientRect()\r\n                svgContainer.current.style.width = `${infosContainerBounding.width}px`\r\n                svgContainer.current.style.height = `${infosContainerBounding.height}px`\r\n\r\n            }\r\n            sizeFunc()\r\n\r\n            window.addEventListener(\"resize\", () => sizeFunc())\r\n\r\n\r\n        }\r\n        resizeSvgConatiner()\r\n    }, [])\r\n    return (\r\n        <div onMouseLeave={() => {\r\n            timelineSvg.current.reversed(true)\r\n            handleMouseLeave()\r\n        }} onMouseEnter={() => {\r\n            timelineSvg.current.play()\r\n            handleMouseEnter()\r\n        }} ref={workContainer} style={{ transform: `translate3D(${state.parallaxPos?.x}px , ${state.parallaxPos?.y}px, 0px)` }} className='work-container'>\r\n            <div ref={svgContainer} className='work-svg-container'>\r\n                <div className='work-svg-hover'>\r\n                    <div className='work-date'>{projet.date}</div>\r\n                    <div className='hidden-text'> <div className='work-title work-title-custome'>{projet.title}</div></div>\r\n                    <div className='work-small-text'>{projet.descriptionProjet}</div>\r\n                    <div className='work-svg-btn' onClick={() => navigate(\"/projet\")}>VOIR TOUT</div>\r\n                </div>\r\n                <div className='work-svg'>\r\n                    <svg fill='#000' viewBox='0 0 1000 1000' preserveAspectRatio='none'>\r\n                        <path id='svg' style={{ transform: \"translateY(-4px)\" }} d=\"M0 2S175 1 500 1s500 1 500 1V0H0Z\"></path>\r\n                    </svg>\r\n                </div>\r\n\r\n\r\n            </div>\r\n            <div className='work-infos-container'>\r\n                <div className='work-text'>\r\n                    <div className='work-date'>{projet.date}</div>\r\n                    <div className='hidden-text'><div className='work-title work-title-custome-infos'>{projet.title}</div></div>\r\n                    <div className='work-small-title'>{projet.titleProjet}</div>\r\n                    <div className='work-small-text'>{projet.descriptionProjet}</div>\r\n                </div>\r\n\r\n                <div className='work-img'>\r\n                    <div className='work-img-tab work-img-back'></div>\r\n\r\n\r\n                    <MotionConfig transition={{ type: \"spring\", duration: 2, delay: 2 }}>\r\n\r\n                        <motion.div\r\n                            className='work-img-laptop work-img-back'\r\n                            animate={{ scale: 1.2 }}\r\n                            exit={{ scale: 3 }}\r\n\r\n                        >\r\n\r\n                        </motion.div>\r\n\r\n\r\n                    </MotionConfig>\r\n\r\n\r\n                    <div className='work-img-phone work-img-back'></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default WorkCard","import React from 'react'\r\nimport { Suspense } from 'react'\r\nimport { Canvas } from '@react-three/fiber'\r\nimport { Environment } from '@react-three/drei'\r\nimport Scene from './Scene'\r\nimport Layout from '../../components/layout/layout'\r\nimport \"./porteFolio.scss\"\r\nimport WorkCard from '../../components/workCard/workCard'\r\nimport { data } from './data'\r\nimport { motion, AnimatePresence } from \"framer-motion\"\r\nimport { OrbitControls } from '@react-three/drei'\r\nfunction index() {\r\n    return (\r\n        <Layout>\r\n\r\n\r\n            <div className='header-container'>\r\n\r\n                <div className='title' style={{ color: \"#110B11\" }}>traveaux recents</div>\r\n                {/* <Canvas\r\n                    style={{ width: \"50%\", height: \"50%\", backgroundColor: 'dodgerblue' }} camera={\r\n                        {\r\n                            position: [\r\n                                -5, 2, 10\r\n                            ],\r\n                            fov: 60,\r\n                         \r\n                        }\r\n                    }\r\n\r\n                >\r\n                     <OrbitControls/>\r\n                     <ambientLight intensity={0.5} color={\"white\"} />\r\n                   \r\n                     <Scene />\r\n                    \r\n                </Canvas> */}\r\n                <div className='small-text-container'>\r\n                    {/* <div className='small-text-title'>Dans plusieurs langages de développement web.</div> */}\r\n\r\n\r\n                    <motion.div\r\n                        className='header-text-poste'\r\n                        initial={{ opacity: 0 }}\r\n                        animate={{ opacity: 1 }}\r\n\r\n                    > Nouveau projet mobile , web et desktop.\r\n                    </motion.div>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            <div className='works-container'>\r\n                {data.map((infos) => {\r\n                    return <WorkCard projet={infos} />\r\n                })}\r\n            </div>\r\n\r\n            <div className='header-container' style={{ marginTop: \"1rem\" }}>\r\n                <div className='title' style={{ marginTop: \"1rem\" }}>Mobile projets</div>\r\n                <div className='small-text-container' style={{ marginTop: \"3.5rem\" }}>\r\n                    {/* <div className='small-text-title'>Dans plusieurs langages de développement web.</div> */}\r\n                    <div className='header-text-poste'> Le domaine du mobile en plein essort.<br />Consulter mes traveaux les plus recents.</div>\r\n                </div>\r\n\r\n            </div>\r\n            <div className='works-container'>\r\n                {data.map((infos) => {\r\n                    return <WorkCard projet={infos} />\r\n                })}\r\n            </div>\r\n\r\n\r\n        </Layout>\r\n\r\n    )\r\n}\r\n\r\nexport default index"],"names":["date","title","titleProjet","descriptionProjet","MotionConfigContext","createContext","transformPagePoint","p","isStatic","reducedMotion","validMotionProps","Set","isValidMotionProp","key","startsWith","has","shouldForward","loadExternalIsValidProp","isValidProp","require","default","_a","useConstant","init","ref","useRef","current","MotionConfig","children","config","useContext","context","useMemo","JSON","stringify","transition","Provider","value","MotionContext","isBrowser","document","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","LazyContext","strict","isRefObject","Object","prototype","hasOwnProperty","call","isVariantLabel","v","Array","isArray","isAnimationControls","start","variantPriorityOrder","variantProps","isControllingVariants","props","animate","some","name","isVariantNode","Boolean","variants","useCreateMotionContext","initial","undefined","inherit","getCurrentTreeVariants","variantLabelsAsDependency","prop","join","featureProps","animation","exit","drag","focus","hover","tap","pan","inView","layout","featureDefinitions","isEnabled","LayoutGroupContext","SwitchLayoutGroupContext","motionComponentSymbol","Symbol","for","preloadedFeatures","createVisualElement","useRender","useVisualState","Component","features","loadFeatures","ForwardRefComponent","forwardRef","externalRef","MeasureLayout","configAndProps","layoutId","useLayoutId","visualState","visualElement","parent","lazyContext","presenceContext","reducedMotionConfig","visualElementRef","renderer","blockInitialAnimation","useInsertionEffect","update","render","updateFeatures","window","HandoffAppearAnimations","animationState","animateChanges","useVisualElement","initialLayoutGroupConfig","isStrict","useCallback","instance","mount","unmount","useMotionRef","layoutGroupId","id","createMotionProxy","createConfig","custom","customMotionComponentConfig","Proxy","componentCache","Map","get","_target","set","lowercaseSVGElements","isSVGComponent","includes","indexOf","test","scaleCorrectors","transformPropOrder","transformProps","isForcedMotionValue","isMotionValue","getVelocity","translateAlias","x","y","z","transformPerspective","numTransforms","length","checkStringStartsWith","token","isCSSVariableName","isCSSVariableToken","getValueAsType","type","transform","clamp","min","max","Math","number","parse","parseFloat","alpha","scale","sanitize","round","floatRegex","colorRegex","singleColorRegex","isString","createUnitType","unit","endsWith","split","degrees","percent","px","vh","vw","progressPercentage","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","borderRadius","radius","borderTopLeftRadius","borderTopRightRadius","borderBottomRightRadius","borderBottomLeftRadius","width","maxWidth","height","maxHeight","size","top","right","bottom","left","padding","paddingTop","paddingRight","paddingBottom","paddingLeft","margin","marginTop","marginRight","marginBottom","marginLeft","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scaleZ","skew","skewX","skewY","distance","translateX","translateY","translateZ","perspective","opacity","originX","originY","originZ","zIndex","fillOpacity","strokeOpacity","numOctaves","buildHTMLStyles","state","latestValues","options","transformTemplate","style","vars","transformOrigin","hasTransform","hasTransformOrigin","transformIsNone","valueType","valueAsType","enableHardwareAcceleration","allowTransformNone","transformIsDefault","transformString","i","trim","buildTransform","createHtmlRenderState","copyRawValuesOnly","target","source","useStyle","assign","useInitialMotionValues","transformValues","useHTMLProps","htmlProps","dragListener","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","tabIndex","onTap","onTapStart","whileTap","calcOrigin","origin","offset","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","latest","isSVGTag","viewBox","attrs","dimensions","calcSVGTransformOrigin","spacing","useDashCase","keys","buildSVGPath","createSvgRenderState","tag","toLowerCase","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","values","filterProps","elementProps","renderedChildren","createElement","camelToDash","str","replace","renderHTML","element","styleProp","projection","getProjectionStyles","setProperty","camelCaseAttributes","renderSVG","renderState","_styleProp","setAttribute","scrapeMotionValuesFromProps","prevProps","newValues","charAt","toUpperCase","substring","resolveVariantFromProps","definition","currentValues","currentVelocity","isKeyframesTarget","isCustomValue","mix","toValue","resolveFinalValueInKeyframes","resolveMotionValue","unwrappedValue","makeUseVisualState","make","createRenderState","onMount","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","forEach","resolved","transitionEnd","valueTarget","svgMotionConfig","getBBox","getBoundingClientRect","e","tagName","htmlMotionConfig","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","point","addPointerInfo","addPointerEvent","combineFunctions","a","b","pipe","transformers","reduce","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","openHorizontal","openVertical","isDragActive","openGestureLock","Feature","constructor","node","this","isMounted","noop","any","stepsOrder","schedule","cancel","cancelFrame","frameData","steps","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","delta","timestamp","isProcessing","acc","toRun","toRunNextFrame","numToRun","flushNextFrame","toKeepAlive","WeakSet","step","callback","keepAlive","immediate","addToCurrentFrame","buffer","add","push","index","splice","delete","process","createRenderStep","processStep","stepId","processBatch","createRenderBatcher","requestAnimationFrame","addHoverEvent","isActive","callbackName","info","getProps","whileHover","setActive","isNodeOrChild","child","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","observerCallbacks","WeakMap","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","root","lookupRoot","rootObservers","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","all","gestureAnimations","super","arguments","hasEnteredView","isInView","startObserver","viewport","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startEvent","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","removePointerListener","removeFocusListener","onFocus","isFocusVisible","matches","onBlur","shallowCompare","next","prev","prevLength","resolveVariant","getCurrent","velocity","optimizedAppearDataAttribute","warning","invariant","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","instantAnimationState","isBezierDefinition","easing","isWaapiSupportedEasing","supportedWaapiEasing","every","cubicBezierAsString","c","d","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","calcBezier","t","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","abs","binarySubdivide","isEasingArray","mirrorEasing","reverseEasing","sin","acos","circInOut","backInOut","easingLookup","anticipate","pow","easingDefinitionToFunction","x1","y1","x2","y2","isColorString","testProp","splitColor","aName","bName","cName","match","rgbUnit","clampRgbUnit","rgba","red","green","blue","alpha$1","hex","r","g","parseInt","hsla","hue","saturation","lightness","color","from","to","progress","hueToRgb","q","mixLinearColor","fromExpo","sqrt","colorTypes","asRGBA","find","model","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","cssVarTokeniser","regex","countKey","colorTokeniser","numberTokeniser","tokenise","tokenised","analyseComplexValue","originalValue","toString","numVars","numColors","numNumbers","parseComplexValue","createTransformer","numValues","output","convertNumbersToZero","complex","_b","isNaN","getAnimatableNone","parsed","transformer","mixImmediate","getMixer","mixComplex","mixArray","blendValue","fromThis","mixObject","template","originStats","targetStats","toFromDifference","mixNumber","createMixers","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","interpolate","input","isClamp","inputLength","reverse","interpolator","progressInRange","defaultOffset","arr","remaining","offsetProgress","fillOffset","keyframes","duration","keyframeValues","times","easingFunctions","done","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","calculatedDuration","velocityPerSecond","frameDuration","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","safeMin","minDuration","maxDuration","minDamping","maxDamping","findSpring","bounce","mass","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","exp","f","initialGuess","result","rootIterations","approximateRoot","stiffness","damping","durationKeys","physicsKeys","isSpringType","spring","restDelta","restSpeed","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","inertia","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","nearestBoundary","amplitude","ideal","calcDelta","calcLatest","applyFriction","timeReachedBoundary","spring$1","checkCatchBoundary","hasUpdatedFrame","frameloopDriver","passTimestamp","stop","now","performance","maxGeneratorDuration","calcGeneratorDuration","generator","Infinity","types","decay","tween","animateValue","autoplay","delay","driver","keyframes$1","repeat","repeatDelay","repeatType","onPlay","onStop","onComplete","onUpdate","resolveFinishedPromise","currentFinishedPromise","speed","hasStopped","updateFinishedPromise","Promise","resolve","animationDriver","generatorFactory","mapNumbersToKeyframes","mirroredGenerator","playState","holdTime","startTime","cancelTime","resolvedDuration","totalDuration","currentTime","tick","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","iterationIsOdd","isAnimationFinished","finish","stopAnimationDriver","play","controls","then","reject","time","newTime","newSpeed","pause","complete","sample","supportsWaapi","memo","Element","acceleratedValues","createAcceleratedAnimation","valueName","requiresPregeneratedKeyframes","sampleAnimation","pregeneratedKeyframes","keyframeOptions","fill","iterations","direction","animateStyle","owner","cancelAnimation","safeCancel","onfinish","getFinalKeyframe","timeline","playbackRate","setWithVelocity","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","isAnimatable","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","filter","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","animateMotionValue","valueTransition","isTargetAnimatable","defaultOrigin","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","setValue","createInstantAnimation","HTMLElement","acceleratedAnimation","isWillChangeMotionValue","addUniqueItem","item","removeItem","SubscriptionManager","subscriptions","notify","numSubscriptions","getSize","clear","MotionValue","version","timeDelta","lastUpdated","canTrackVelocity","events","updateAndNotify","postRender","scheduleVelocityCheck","change","velocityChange","renderRequest","velocityCheck","hasAnimated","onChange","subscription","on","unsubscribe","read","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","jump","getPrevious","startAnimation","animationStart","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","testValueType","dimensionValueTypes","findDimensionValueType","valueTypes","findValueType","setMotionValue","hasValue","getValue","addValue","setTarget","makeTargetAnimatable","getOriginFromTransition","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","transitionOverride","willChange","animations","animationTypeState","getState","appearId","shouldReduceMotion","remove","animateVariant","variant","getAnimation","getChildAnimations","variantChildren","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileDrag","whileFocus","isInitialRender","buildResolvedTypeValues","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","updateAnimationControlsSubscription","subscribe","prevAnimate","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","PanSession","handlers","lastMoveEvent","lastMoveEventInfo","updatePoint","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","transformPoint","handlePointerUp","end","onEnd","onSessionEnd","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timestampedPoint","lastPoint","calcLength","axis","isNear","maxDistance","calcAxisDelta","originPoint","translate","calcBoxDelta","calcRelativeAxis","relative","calcRelativeAxisPosition","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","convertBoundingBoxToBox","isIdentityScale","hasScale","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","measureViewportBox","topLeft","bottomRight","transformBoxPoints","elementDragControls","VisualElementDragControls","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","stopAnimation","dragPropagation","onDragStart","resolveConstraints","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","updateScroll","updateLayout","addListeners","stopPointerListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","MeasureLayoutWithContext","componentDidMount","layoutGroup","switchLayoutGroup","correctors","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","queueMicrotask","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","deregister","useId","usePresence","applyTo","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","isDirty","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","args","subscriptionManager","hasListeners","SVGElement","cancelDelay","resizeUnblockUpdate","timeout","checkElapsed","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundPoint","isWebKit","roundAxis","roundBox","measuredBox","boxWithoutScroll","rootScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","resolvedRelativeTargetAt","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionTransform","projectionDeltaWithTransform","prevProjectionTransform","notifyAll","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasRotate","resetValues","setStaticValue","styles","visibility","pointerEvents","emptyStyles","valuesToRender","corrected","num","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","navigator","userAgent","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","dragControls","ProjectionNode","splitCSSVariableRegex","maxDepth","getVariableValue","fallback","exec","parseCSSVariable","getPropertyValue","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","positionalValues","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","fromType","toType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","scrollY","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","numFeatures","propEventHandlers","numVariantProps","VisualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","baseTarget","initialValues","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","renderedProps","ProjectionNodeConstructor","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","getStaticValue","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","startAtParent","closestVariantNode","removeValueFromRenderState","readValue","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","transitionOrigin","getOrigin","newValueKeys","numNewValues","targetValue","checkTargetForNewValues","HTMLVisualElement","defaultType","computedStyle","childSubscription","textContent","SVGVisualElement","getAttribute","motion","initialState","parallaxPos","reducer","action","payload","Error","_ref","_state$parallaxPos","_state$parallaxPos2","projet","dispatch","useReducer","svgContainer","React","workContainer","timelineSvg","parallax","innerWidth","pageX","innerHeight","pageY","gsap","attr","paused","sizeFunc","_document$querySelect","infosContainerBounding","querySelector","resizeSvgConatiner","onMouseLeave","reversed","onMouseEnter","className","onClick","navigate","preserveAspectRatio","div","Layout","infos","WorkCard"],"sourceRoot":""}